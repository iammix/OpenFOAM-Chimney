/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |				
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10                                  	
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       true;

geometry
{
    cylinder.stl
    {
        type triSurfaceMesh;
        name cylinder;
    }

    refinementBox
    {
        type searchableBox;
        min (-3 -3 0);
        max (3 3 22);
    }


};

castellatedMeshControls
{

    maxLocalCells 100000;

    maxGlobalCells 3000000;

    minRefinementCells 0;

    maxLoadUnbalance 0.10;

    nCellsBetweenLevels 2;

    features
    (
        {
            file "cylinder.eMesh";
            level 0;
            //level 4;
        }
    );

    refinementSurfaces
    {
        cylinder
        {
            //level (2 2);
            level (2 4);
        }
    }

    resolveFeatureAngle 30;		

    planarAngle 30;

    refinementRegions
    {
        refinementBox
        {
            mode inside;
            levels ((1 1));

            //mode distance;
            //levels ((0.1 1));
        }
    }

    locationInMesh (4.0 0.1 0.1); 

    allowFreeStandingZoneFaces true;

}

snapControls
{
    nSmoothPatch 10;

    tolerance 2.0;

    nSolveIter 300;

    nRelaxIter 50;

        nFeatureSnapIter 10;

        implicitFeatureSnap false;

        explicitFeatureSnap true;

        multiRegionFeatureSnap false;

}

addLayersControls
{
    relativeSizes true;

    expansionRatio 1.2;

    finalLayerThickness 0.9;

    minThickness 0.1;

    layers
    {
        "cylinder_*" 
        {
            nSurfaceLayers 10;	//10
        }

    }

    nGrow 0;

        featureAngle 130;

        maxFaceThicknessRatio 0.5;

        nSmoothSurfaceNormals 1;

        nSmoothThickness 10;

        minMedialAxisAngle 90;
        minMedianAxisAngle 90;

        maxThicknessToMedialRatio 0.3;

        nSmoothNormals 3;

        slipFeatureAngle 30;

        nRelaxIter 5;

        nBufferCellsNoExtrude 0;

        nLayerIter 50;

        nRelaxedIter 20;
}

meshQualityControls
{
    #include "meshQualityDict"

    minFlatness 0.5;

        nSmoothScale 4;
        errorReduction 0.75;
}

debugFlags
(
    //mesh
    //intersections
    //featureSeeds
    //attraction
    //layerInfo
);

writeFlags
(
    scalarLevels
    layerSets
    layerFields
);

mergeTolerance 1e-7;

// ************************************************************************* //
